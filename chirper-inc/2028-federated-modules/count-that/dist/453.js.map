{"version":3,"file":"453.js","mappings":";;;;;;;;;;;;;;;AAAwC;AACP;AACM;AACG;AAC1C,MAAMK,OAAO,gBAAGL,iDAAU,CAAC,MAAMO,iBAAiB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AAEzEC,KAAK,GAAGC,cAAc,CAAC;EAACC,OAAO,EAAE;IAAC,OAAO,EAAEC,KAAK,CAACD;EAAO;AAAC,CAAC,CAAC;AAE3D,MAAME,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEZ,0DAAA,CAACG,iDAAQ;IAACK,KAAK,EAAEA;EAAM,gBACrBR,0DAAA,cAAK,kBAEH,eAAAA,0DAAA,2BACEA,0DAAA,CAACC,2CAAQ;IAACa,QAAQ,eAAEd,0DAAA,CAACI,uDAAW,MAAC;EAAE,gBACjCJ,0DAAA,CAACK,OAAO;IAACG,KAAK,EAAEA;EAAM,CAAE,CAChB,CACP,CACF,CACG,CAAC;AAEf,CAAC;AAEDN,uDAAe,eAACF,0DAAA,CAACY,GAAG,MAAE,CAAC,EAAEI,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC","sources":["webpack://count-that/./src/bootstrap.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {MoonSpinner} from 'react-spinners'\nconst Counter = React.lazy(() => dynamicFederation('count', './Counter'));\n\nstore = configureStore({reducer: {'count': slice.reducer}})\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div>\n        Counter: The App\n        <div>\n          <Suspense fallback={<MoonSpinner/>}>\n            <Counter store={store} />\n          </Suspense>\n        </div>\n      </div>\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"names":["React","Suspense","ReactDOM","Provider","MoonSpinner","Counter","lazy","dynamicFederation","store","configureStore","reducer","slice","App","createElement","fallback","render","document","getElementById"],"sourceRoot":""}