{"version":3,"file":"123.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAA4C;AAE5C,MAAMC,aAAK,GAAGD,qCAAW,CAAC;EACxBE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,SAASA,CAACC,KAAK,EAAE;IACfA,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AACF,kDAAeJ,gDAAAA,aAAK;;ACToB;AACyB;AAC/B;AAEJ;AAG9B,MAAMW,MAAM,gBAAGN,gDAAAA,KAAK,CAACO,IAAI,CAAC,MAAM,wGAAwB,CAAC;AAEzD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,KAAK,GAAGP,WAAW,CAACJ,KAAK,IAAIA,KAAK,CAACW,KAAK,CAAC;EAC/C,MAAMC,SAAS,GAAGR,WAAW,CAACJ,KAAK,IAAIA,KAAK,EAAEa,MAAM,CAAC,CAAC,CAAE,CAAC;EACzD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExD,oBACED,KAAA,CAAAe,aAAA;IAAKC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO;EAAE,gBAChCjB,KAAA,CAAAe,aAAA,cAAK,SAAY,CAAC,eAClBf,KAAA,CAAAe,aAAA,cAAK,iBAAe,EAACL,KAAW,CAAC,eAEjCV,KAAA,CAAAe,aAAA,cAAK,eAAa,EAACL,KAAW,CAAC,eAC/BV,KAAA,CAAAe,aAAA,2BACEf,KAAA,CAAAe,aAAA;IACEC,KAAK,EAAE;MAAEE,WAAW,EAAE;IAAO,CAAE;IAC/BC,IAAI,EAAC,MAAM;IACXC,QAAQ,EAAEC,CAAC,IAAI;MACbP,iBAAiB,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACnC;EAAE,CACH,CAAC,eACFvB,KAAA,CAAAe,aAAA,CAACf,KAAK,CAACwB,QAAQ;IAACC,QAAQ,eAAEzB,KAAA,CAAAe,aAAA,CAACW,UAAU,MAAC;EAAE,gBACxC1B,KAAA,CAAAe,aAAA,CAACT,MAAM;IAACqB,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAACd,KAAK,CAACiC,OAAO,CAACC,IAAI,CAAC,CAAC;EAAE,GAAC,KAE/C,CACQ,CACb,CACF,CAAC;AAEV,CAAC;AAED,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;EAChC,MAAM;IAAEC;EAAM,CAAC,GAAGD,KAAK;EACvB1B,6BAAS,CAAC,MAAM;IACd2B,KAAK,CAACC,aAAa,CAACC,cAAc,EAAEC,OAAO,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnC,sCAAA,CAACE,kBAAQ;IAAC8B,KAAK,EAAEA,KAAK,IAAI,CAAC;EAAE,gBAC3BhC,sCAAA,CAACoC,SAAS,MAAE,CACJ,CAAC;AAEf,CAAC;AAED,kDAAeN,gBAAgB","sources":["webpack://count-that/./src/reducer.js","webpack://count-that/./src/Counter.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst slice = createSlice({\n  name: \"count\",\n  initialState: [],\n  increment(state) {\n    state++\n  }\n})\nexport default slice;\n","import React, { useState } from 'react';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport slice from './reducer';\n\n\nconst Button = React.lazy(() => import('chirper/Button'));\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const count = useSelector(state => state.count);\n  const lastChirp = useSelector(state => state?.chirps[0] )\n  const [remoteAppInput, setRemoteAppInput] = useState('');\n\n  return (\n    <div style={{ marginTop: '10px' }}>\n      <div>Counter</div>\n      <div>CurrentCount : {count}</div>\n\n      <div>Last Chirp : {count}</div>\n      <div>\n        <input\n          style={{ marginRight: '10px' }}\n          type=\"text\"\n          onChange={e => {\n            setRemoteAppInput(e.target.value);\n          }}\n        />\n        <React.Suspense fallback={<MoonLoader/>}>\n        <Button onClick={() => dispatch(slice.actions.incr())}>\n          Add\n        </Button>\n        </React.Suspense>\n      </div>\n    </div>\n  );\n};\n\nconst RemoteAppWrapper = props => {\n  const { store } = props;\n  useEffect(() => {\n    store.injectReducer(remoteAppScope, reducer);\n  }, []);\n\n  return (\n    <Provider store={store || {}}>\n      <RemoteApp />\n    </Provider>\n  );\n};\n\nexport default RemoteAppWrapper;\n"],"names":["createSlice","slice","name","initialState","increment","state","React","useState","Provider","useSelector","useDispatch","useEffect","Button","lazy","Counter","dispatch","count","lastChirp","chirps","remoteAppInput","setRemoteAppInput","createElement","style","marginTop","marginRight","type","onChange","e","target","value","Suspense","fallback","MoonLoader","onClick","actions","incr","RemoteAppWrapper","props","store","injectReducer","remoteAppScope","reducer","RemoteApp"],"sourceRoot":""}